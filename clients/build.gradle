apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    // Corda dependencies.
    compile "$corda_release_group:corda-rpc:$corda_release_version"
    compile "$corda_release_group:corda-jackson:$corda_release_version"

    // CorDapp dependencies.
    compile project(":cordapp-contracts-states")
    compile project(":cordapp")

    // Spring Boot
    compile("org.springframework.boot:spring-boot-starter:$spring_boot_version")
    compile("org.springframework.boot:spring-boot-starter-web:$spring_boot_version")

    // Swagger
    compile "io.springfox:springfox-swagger2:${springfox_version}"
    compile "io.springfox:springfox-swagger-ui:${springfox_version}"

    // Corbeans starterts
    compile ("com.github.manosbatsis.corbeans:corbeans-spring-boot-starter:$corbeans_version")
    // Add support for RESTful errors
    compile ("com.github.manosbatsis.scrudbeans:scrudbeans-error:$scrudbeans_version")

    // JSON API
    compile "javax.json:javax.json-api:1.1.3"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.1"
        apiVersion = "1.1"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}

springBoot {
    mainClassName = "com.apemon.webserver.ServerKt"
}

task runTemplateClient(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.apemon.ClientKt'
    args 'localhost:10006', 'user1', 'test'
}

task runTemplateServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.apemon.webserver.ServerKt'
    args '--server.port=10007', '--config.rpc.host=localhost', '--config.rpc.port=10006', '--config.rpc.username=user1', '--config.rpc.password=password'
}
